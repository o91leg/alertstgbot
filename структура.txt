crypto_bot/
├── src/
│   ├── __init__.py
│   ├── main.py                           # 🚀 Точка входа приложения
│   ├── bot/                              # 🤖 Telegram бот интерфейс
│   │   ├── __init__.py
│   │   ├── handlers/                     # Обработчики команд и сообщений
│   │   │   ├── __init__.py
│   │   │   ├── start_handler.py          # Команда /start
│   │   │   ├── add_pair/                 # Модуль добавления пар
│   │   │   │   ├── __init__.py
│   │   │   │   ├── add_pair_handler.py
│   │   │   │   ├── add_pair_logic.py
│   │   │   │   └── add_pair_formatters.py
│   │   │   ├── my_pairs/                 # Модуль управления парами
│   │   │   │   ├── __init__.py
│   │   │   │   ├── my_pairs_handler.py
│   │   │   │   ├── my_pairs_formatters.py
│   │   │   │   ├── my_pairs_keyboards.py
│   │   │   │   └── my_pairs_logic.py
│   │   │   └── remove_pair_handler.py    # Удаление пар
│   │   ├── keyboards/                    # Inline клавиатуры
│   │   │   ├── __init__.py
│   │   │   └── main_menu_kb.py
│   │   └── middlewares/                  # Middleware
│   │       ├── __init__.py
│   │       └── database_mw.py
│   ├── config/                           # ⚙️ Конфигурация
│   │   ├── __init__.py
│   │   ├── base_config.py                # Базовая конфигурация
│   │   ├── bot_config.py                 # Конфигурация бота
│   │   ├── database_config.py            # Конфигурация БД
│   │   ├── redis_config.py               # Конфигурация Redis
│   │   ├── binance_config.py             # Конфигурация Binance
│   │   ├── real_time_config.py           # 🔥 Конфигурация реального времени
│   │   └── logging_config.py             # Конфигурация логирования
│   ├── data/                             # 🗄️ Модели и работа с данными
│   │   ├── __init__.py
│   │   ├── models/                       # SQLAlchemy модели
│   │   │   ├── __init__.py
│   │   │   ├── base_model.py
│   │   │   ├── user_model.py
│   │   │   ├── pair_model.py
│   │   │   ├── user_pair_model.py
│   │   │   ├── candle_model.py
│   │   │   └── signal_history_model.py
│   │   ├── repositories/                 # Репозитории для работы с БД
│   │   │   ├── __init__.py
│   │   │   ├── base_repository.py
│   │   │   ├── user_repository.py
│   │   │   └── pair_repository.py
│   │   └── database.py                   # Подключение к БД
│   ├── services/                         # 🔧 Бизнес логика
│   │   ├── __init__.py
│   │   ├── real_time/                    # 🔥 Система реального времени
│   │   │   ├── __init__.py
│   │   │   ├── real_time_processor.py    # Главный процессор
│   │   │   └── performance_monitor.py    # Монитор производительности
│   │   ├── websocket/                    # WebSocket подключения
│   │   │   ├── __init__.py
│   │   │   ├── binance_websocket.py
│   │   │   ├── stream_manager.py
│   │   │   └── binance_data_processor.py
│   │   ├── indicators/                   # Технические индикаторы
│   │   │   ├── __init__.py
│   │   │   ├── rsi_calculator.py
│   │   │   └── ema_calculator.py
│   │   ├── signals/                      # Генерация сигналов
│   │   │   ├── __init__.py
│   │   │   ├── rsi_signals.py
│   │   │   └── signal_aggregator.py
│   │   ├── notifications/                # Система уведомлений
│   │   │   ├── __init__.py
│   │   │   ├── telegram_sender.py
│   │   │   ├── message_formatter.py
│   │   │   └── notification_queue.py
│   │   └── cache/                        # Система кеширования
│   │       ├── __init__.py
│   │       ├── candle_cache.py
│   │       ├── indicator_cache.py
│   │       └── real_time_cache.py        # 🔥 Кеш реального времени
│   └── utils/                            # 🛠️ Утилиты и помощники
│       ├── __init__.py
│       ├── constants.py                  # Константы приложения
│       ├── exceptions.py                 # Кастомные исключения
│       ├── validators.py                 # Валидаторы данных
│       ├── time_helpers.py               # Работа со временем
│       ├── math_helpers.py               # Математические функции
│       ├── logger.py                     # Система логирования
│       └── performance_utils.py          # 🔥 Утилиты производительности
├── .env.example                          # Пример переменных окружения
├── .gitignore                           # Git ignore файл
├── docker-compose.yml                   # Docker Compose конфигурация
├── Dockerfile                           # Docker образ
├── requirements.txt                     # Python зависимости
├── README.md                            # Документация проекта
└── AGENTS.md                            # Детальная карта проекта